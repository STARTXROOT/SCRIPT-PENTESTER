#!/bin/bash
# -----------------------------------------------
# SCRIPT: StartXroot Unveiler - Desenmascarando Dispositivos Ocultos en Tiempo Real
# Autor: STARTXROOT
# Redes Sociales: 
#   Facebook: facebook.com/startxr00t
# -----------------------------------------------

# Desenmascarando dispositivos ocultos en la red con detalles en tiempo real y guardando automáticamente en un archivo CSV

# Función para extraer el fabricante a partir de la dirección MAC usando la API de MAC Vendors
get_manufacturer_macvendors() {
    local mac=$1
    # Introducir un retraso de 0.5 segundos entre solicitudes a la API
    sleep 0.5
    curl -s "https://api.macvendors.com/${mac}"
}

# Función para extraer el fabricante a partir de nmap (ejemplo usando un comando ficticio)
get_manufacturer_nmap() {
    local mac=$1
    # Utiliza nmap o cualquier otra herramienta para obtener el fabricante aquí
    # Aquí usamos un placeholder. Asegúrate de ajustar esto según tu configuración.
    nmap -O --osscan-guess "$mac" | grep "MAC Address" | awk '{print substr($0, index($0,$3))}'
}

# Archivo temporal para almacenar resultados
temp_file=$(mktemp)
csv_file="resultados_red.csv"

# Cabecera para el archivo CSV
echo "IP,MAC,Fabricante" > "$csv_file"

# Escaneo de la red local
echo -e "\e[1;36m[INFO]\e[0m Detectando dispositivos ocultos en la red..."
sudo arp-scan --localnet | while read -r line; do
    if [[ $line =~ ([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2}) ]]; then
        ip=$(echo "$line" | awk '{print $1}')
        mac=$(echo "$line" | awk '{print $2}')
        
        # Intentar obtener el fabricante usando nmap primero
        manufacturer=$(get_manufacturer_nmap "$mac")
        
        # Si nmap no proporciona el fabricante, usar la API de MAC Vendors
        if [[ -z "$manufacturer" ]]; then
            manufacturer=$(get_manufacturer_macvendors "$mac")
        fi
        
        # Si no se obtiene el fabricante, marcar como desconocido
        manufacturer="${manufacturer:-Desconocido}"
        
        # Mostrar la información con colores y también guardar en el archivo CSV
        echo -e "\e[1;32m[DETECTADO]\e[0m IP: \e[1;33m$ip\e[0m \tMAC: \e[1;35m$mac\e[0m \tFabricante: \e[1;34m$manufacturer\e[0m" | tee -a "$temp_file"
        
        # Guardar en CSV
        echo "$ip,$mac,$manufacturer" >> "$csv_file"
    fi
done

echo -e "\e[1;36m[COMPLETADO]\e[0m Escaneo finalizado. Los resultados han sido guardados en $csv_file."
